{"version":3,"sources":["Form/FormMakanan.js","Lib/DaftarMakanan.js","Page/MenuMakanan.js","App.js","serviceWorker.js","index.js"],"names":["FormMakanan","props","state","pesanan","jumlah","handleChangePesanan","bind","handleChangeJumlah","handleSubmit","otomatisPointer","React","createRef","e","preventDefault","this","setState","target","value","alert","current","focus","onSubmit","type","onChange","placeholder","ref","Component","DaftarMakanan","NamaMakanan","Harga","img","listmakanan","MenuMakanan","map","data","i","key","src","alt","width","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2PAgDeA,E,kDA7Cd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACZC,QAAU,GACVC,OAAS,GAEV,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,gBAAkBC,IAAMC,YATZ,E,gEAYEC,GACnBA,EAAEC,iBACFC,KAAKC,SAAS,CAACZ,QAAUS,EAAEI,OAAOC,U,yCAGhBL,GAClBA,EAAEC,iBACFC,KAAKC,SAAS,CAACX,OAASQ,EAAEI,OAAOC,U,mCAGrBL,GACZA,EAAEC,iBACFK,MAAM,2BAA6BJ,KAAKZ,MAAMC,QAAS,eAAiBW,KAAKZ,MAAME,QACnFU,KAAKC,SAAS,CAACZ,QAAU,GAAIC,OAAS,KACtCU,KAAKL,gBAAgBU,QAAQC,U,+BAGrB,IAAD,OACP,OACC,6BACC,gCACC,0BAAMC,SAAUP,KAAKN,cACpB,2BAAOc,KAAK,OAAOL,MAAOH,KAAKZ,MAAMC,QAASoB,SAAU,SAACX,GAAD,OAAO,EAAKP,oBAAoBO,IAAIY,YAAY,iBACxG,2BAAOF,KAAK,SAASL,MAAOH,KAAKZ,MAAME,OAAQmB,SAAU,SAACX,GAAD,OAAO,EAAKL,mBAAmBK,MACxF,2BAAOU,KAAK,SAASL,MAAM,QAAQQ,IAAKX,KAAKL,yB,GArCzBiB,aC0BXC,EA5BO,CACtB,CACCC,YAAc,cACdC,MAAQ,SACRC,IAAM,4EAEP,CACCF,YAAc,OACdC,MAAQ,SACRC,IAAM,sEAEP,CACCF,YAAc,OACdC,MAAQ,SACRC,IAAM,8EAEP,CACCF,YAAc,YACdC,MAAQ,SACRC,IAAM,2GAEP,CACCF,YAAc,cACdC,MAAQ,SACRC,IAAM,6FCnBDC,EAAc,CACpB,CACCH,YAAc,cACdC,MAAQ,UAET,CACCD,YAAc,OACdC,MAAQ,UAET,CACCD,YAAc,OACdC,MAAQ,UAET,CACCD,YAAc,YACdC,MAAQ,UAET,CACCD,YAAc,cACdC,MAAQ,UAET,CACCD,YAAc,cACdC,MAAQ,UAET,CACCD,YAAc,aACdC,MAAQ,UAET,CACCD,YAAc,QACdC,MAAQ,UAET,CACCD,YAAc,WACdC,MAAQ,WAuCMG,E,uKAlCb,OACC,6BACC,yDACA,+BACC,+BACC,4BACEL,EAAcM,KAAI,SAACC,EAAKC,GACxB,OACC,wBAAIC,IAAKD,GACR,yBAAKE,IAAKH,EAAKJ,IAAKQ,IAAI,kBAAkBC,MAAM,MAAMC,OAAO,QAC7D,gCACC,2BAAIN,EAAKN,aACT,sCAAYM,EAAKL,eAQxB,4CACCE,EAAYE,KAAI,SAACC,EAAKC,GACtB,OACC,yBAAKC,IAAKD,GACT,2BAAID,EAAKN,YAAT,cAAiCM,EAAKL,WAIzC,kBAAC,EAAD,W,GA9BsBH,aC/BXe,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.85f46de6.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass FormMakanan extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tpesanan : \"\",\n\t\t\tjumlah : 0\n\t\t}\n\t\tthis.handleChangePesanan = this.handleChangePesanan.bind(this)\n\t\tthis.handleChangeJumlah = this.handleChangeJumlah.bind(this)\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t\tthis.otomatisPointer = React.createRef()\n\t}\n\n\thandleChangePesanan(e){\n\t\te.preventDefault()\n\t\tthis.setState({pesanan : e.target.value})\n\t}\n\n\thandleChangeJumlah(e){\n\t\te.preventDefault()\n\t\tthis.setState({jumlah : e.target.value})\n\t}\n\n\thandleSubmit(e){\n\t\te.preventDefault()\n\t\talert(\"Pesananan Anda Adalah : \" + this.state.pesanan +\" | Jumlah : \" + this.state.jumlah)\n\t\tthis.setState({pesanan : \"\", jumlah : \"\"})\n\t\tthis.otomatisPointer.current.focus()\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<center>\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input type=\"text\" value={this.state.pesanan} onChange={(e) => this.handleChangePesanan(e)} placeholder=\"Pesanan Anda\"/>\n\t\t\t\t\t\t<input type=\"number\" value={this.state.jumlah} onChange={(e) => this.handleChangeJumlah(e)}/>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Pesan\" ref={this.otomatisPointer}/>\n\t\t\t\t\t</form>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default FormMakanan;","const DaftarMakanan = [\n{\n\tNamaMakanan : \"Nasi Padang\",\n\tHarga : \"20.000\",\n\timg : \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\"\n},\n{\n\tNamaMakanan : \"Sate\",\n\tHarga : \"20.000\",\n\timg : \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\"\n},\n{\n\tNamaMakanan : \"Soto\",\n\tHarga : \"10.000\",\n\timg : \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"\n},\n{\n\tNamaMakanan : \"Nasi Uduk\",\n\tHarga : \"10.000\",\n\timg : \"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\"\n},\n{\n\tNamaMakanan : \"Nasi Kuning\",\n\tHarga : \"15.000\",\n\timg : \"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg\"\n}\n]\n\nexport default DaftarMakanan;","import React, {Component} from 'react';\nimport FormMakanan from './../Form/FormMakanan';\nimport DaftarMakanan from './../Lib/DaftarMakanan';\n\n\nconst listmakanan = [\n{\n\tNamaMakanan : 'Nasi Padang',\n\tHarga : '20.000'\n},\n{\n\tNamaMakanan : 'Sate',\n\tHarga : '20.000'\t\n},\n{\n\tNamaMakanan : 'Soto',\n\tHarga : '10.000'\n},\n{\n\tNamaMakanan : 'Nasi Uduk',\n\tHarga : '10.000'\n},\n{\n\tNamaMakanan : 'Nasi Kuning',\n\tHarga : '15.000'\n},\n{\n\tNamaMakanan : 'Ayam Geprek',\n\tHarga : '15.000'\n},\n{\n\tNamaMakanan : 'Pecel Lele',\n\tHarga : '15.000'\n},\n{\n\tNamaMakanan : 'Pecel',\n\tHarga : '10.000'\n},\n{\n\tNamaMakanan : 'Mie Ayam',\n\tHarga : '10.000'\n}]\n\nclass MenuMakanan extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h3>Daftar Makanan Favorit : </h3>\n\t\t\t\t<table>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{DaftarMakanan.map((data,i) => {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<td key={i}>\n\t\t\t\t\t\t\t\t\t\t<img src={data.img} alt=\"Product Makanan\" width=\"150\" height=\"100\"/>\n\t\t\t\t\t\t\t\t\t\t<center>\n\t\t\t\t\t\t\t\t\t\t\t<p>{data.NamaMakanan}</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>Harga : {data.Harga}</p>\n\t\t\t\t\t\t\t\t\t\t</center>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t<h4>List Makanan</h4>\n\t\t\t\t{listmakanan.map((data,i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t<p>{data.NamaMakanan} | Harga : {data.Harga}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t<FormMakanan/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default MenuMakanan;\n","import React from 'react';\nimport './App.css';\nimport MenuMakanan from './Page/MenuMakanan';\n\nfunction App() {\n  return (\n    <div>\n      <MenuMakanan/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}